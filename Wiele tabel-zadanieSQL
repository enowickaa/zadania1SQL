-- Fragmenty kodu SQL z pliku wiele_tabel_dane_mysql.sql
-- Tworzenie bazy danych
CREATE DATABASE IF NOT EXISTS wiele_tabel_zadanie;
USE wiele_tabel_zadanie;

-- Tworzenie tabeli `agents`
CREATE TABLE IF NOT EXISTS `agents` (
    `AGENT_CODE` VARCHAR(6) PRIMARY KEY NOT NULL DEFAULT '',
    `AGENT_NAME` VARCHAR(40) DEFAULT NULL,
    `WORKING_AREA` VARCHAR(35) DEFAULT NULL,
    `COMMISSION` DECIMAL(10,2) DEFAULT NULL,
    `PHONE_NO` VARCHAR(15) DEFAULT NULL,
    `COUNTRY` VARCHAR(25) DEFAULT NULL
);

-- Wstawianie danych do tabeli `agents`
INSERT INTO `agents` (`AGENT_CODE`, `AGENT_NAME`, `WORKING_AREA`, `COMMISSION`, `PHONE_NO`, `COUNTRY`) VALUES
('A007', 'Ramasundar', 'Bangalore', '0.15', '077-25814763', ''),
('A003', 'Alex', 'London', '0.13', '075-12458969', ''),
('A008', 'Alford', 'New York', '0.12', '044-25874365', ''),
('A011', 'Ravi Kumar', 'Bangalore', '0.15', '077-45625874', ''),
('A010', 'Santakumar', 'Chennai', '0.14', '007-22388644', ''),
('A012', 'Lucida', 'San Jose', '0.12', '044-52981425', ''),
('A005', 'Anderson', 'Brisban', '0.13', '045-21447739', ''),
('A001', 'Subbarao', 'Bangalore', '0.14', '077-12346674', ''),
('A002', 'Mukesh', 'Mumbai', '0.11', '029-12358964', ''),
('A006', 'McDen', 'London', '0.15', '078-22255588', ''),
('A004', 'Ivan', 'Torento', '0.15', '008-22544166', ''),
('A009', 'Benjamin', 'Hampshair', '0.11', '008-22536178', '');

-- Tworzenie tabeli `customer`
CREATE TABLE IF NOT EXISTS `customer` (
    `CUST_CODE` VARCHAR(6) PRIMARY KEY NOT NULL,
    `CUST_NAME` VARCHAR(40) NOT NULL,
    `CUST_CITY` VARCHAR(35) DEFAULT NULL,
    `WORKING_AREA` VARCHAR(35) NOT NULL,
    `CUST_COUNTRY` VARCHAR(20) NOT NULL,
    `GRADE` DECIMAL(10,0) DEFAULT NULL,
    `OPENING_AMT` DECIMAL(12,2) NOT NULL,
    `RECEIVE_AMT` DECIMAL(12,2) NOT NULL,
    `PAYMENT_AMT` DECIMAL(12,2) NOT NULL,
    `OUTSTANDING_AMT` DECIMAL(12,2) NOT NULL,
    `PHONE_NO` VARCHAR(17) NOT NULL,
    `AGENT_CODE` VARCHAR(6) DEFAULT NULL
);

-- Wstawianie danych do tabeli `customer`
INSERT INTO `customer` (`CUST_CODE`, `CUST_NAME`, `CUST_CITY`, `WORKING_AREA`, `CUST_COUNTRY`, `GRADE`, `OPENING_AMT`, `RECEIVE_AMT`, `PAYMENT_AMT`, `OUTSTANDING_AMT`, `PHONE_NO`, `AGENT_CODE`) VALUES
('C00013', 'Holmes', 'London', 'London', 'UK', '2', '6000.00', '5000.00', '7000.00', '4000.00', 'BBBBBBB', 'A003'),
('C00001', 'Micheal', 'New York', 'New York', 'USA', '2', '3000.00', '5000.00', '2000.00', '6000.00', 'CCCCCCC', 'A008'),
('C00020', 'Albert', 'New York', 'New York', 'USA', '3', '5000.00', '7000.00', '6000.00', '6000.00', 'BBBBSBB', 'A008'),
('C00025', 'Ravindran', 'Bangalore', 'Bangalore', 'India', '2', '5000.00', '7000.00', '4000.00', '8000.00', 'AVAVAVA', 'A011'),
('C00024', 'Cook', 'London', 'London', 'UK', '2', '4000.00', '9000.00', '7000.00', '6000.00', 'FSDDSDF', 'A006'),
('C00015', 'Stuart', 'London', 'London', 'UK', '1', '6000.00', '8000.00', '3000.00', '11000.00', 'GFSGERS', 'A003'),
('C00002', 'Bolt', 'New York', 'New York', 'USA', '3', '5000.00', '7000.00', '9000.00', '3000.00', 'DDNRDRH', 'A008'),
('C00018', 'Fleming', 'Brisban', 'Brisban', 'Australia', '2', '7000.00', '7000.00', '9000.00', '5000.00', 'NHBGVFC', 'A005'),
('C00021', 'Jacks', 'Brisban', 'Brisban', 'Australia', '1', '7000.00', '7000.00', '7000.00', '7000.00', 'WERTGDF', 'A005'),
('C00019', 'Yearannaidu', 'Chennai', 'Chennai', 'India', '1', '8000.00', '7000.00', '7000.00', '8000.00', 'ZZZZBFV', 'A010'),
('C00005', 'Sasikant', 'Mumbai', 'Mumbai', 'India', '1', '7000.00', '11000.00', '7000.00', '11000.00', '147-25896312', 'A002'),
('C00007', 'Ramanathan', 'Chennai', 'Chennai', 'India', '1', '7000.00', '11000.00', '9000.00', '9000.00', 'GHRDWSD', 'A010'),
('C00022', 'Avinash', 'Mumbai', 'Mumbai', 'India', '2', '7000.00', '11000.00', '9000.00', '9000.00', '113-12345678', 'A002'),
('C00004', 'Winston', 'Brisban', 'Brisban', 'Australia', '1', '5000.00', '8000.00', '7000.00', '6000.00', 'AAAAAAA', 'A005'),
('C00023', 'Karl', 'London', 'London', 'UK', '0', '4000.00', '6000.00', '7000.00', '3000.00', 'AAAABAA', 'A006'),
('C00006', 'Shilton', 'Torento', 'Torento', 'Canada', '1', '10000.00', '7000.00', '6000.00', '11000.00', 'DDDDDDD', 'A004'),
('C00010', 'Charles', 'Hampshair', 'Hampshair', 'UK', '3', '6000.00', '4000.00', '5000.00', '5000.00', 'MMMMMMM', 'A009'),
('C00017', 'Srinivas', 'Bangalore', 'Bangalore', 'India', '2', '8000.00', '4000.00', '3000.00', '9000.00', 'AAAAAAB', 'A007'),
('C00012', 'Steven', 'San Jose', 'San Jose', 'USA', '1', '5000.00', '7000.00', '9000.00', '3000.00', 'KRFYGJK', 'A012'),
('C00008', 'Karolina', 'Torento', 'Torento', 'Canada', '1', '7000.00', '7000.00', '9000.00', '5000.00', 'HJKORED', 'A004'),
('C00003', 'Martin', 'Torento', 'Torento', 'Canada', '2', '8000.00', '7000.00', '7000.00', '8000.00', 'MJYURFD', 'A004'),
('C00009', 'Ramesh', 'Mumbai', 'Mumbai', 'India', '3', '8000.00', '7000.00', '3000.00', '12000.00', 'Phone No', 'A002'),
('C00014', 'Rangarappa', 'Bangalore', 'Bangalore', 'India', '2', '8000.00', '11000.00', '7000.00', '12000.00', 'AAAATGF', 'A001'),
('C00016', 'Venkatpati', 'Bangalore', 'Bangalore', 'India', '2', '8000.00', '11000.00', '7000.00', '12000.00', 'JRTVFDD', 'A007'),
('C00011', 'Sundariya', 'Chennai', 'Chennai', 'India', '3', '7000.00', '11000.00', '7000.00', '11000.00', 'PPHGRTS', 'A010');

-- Tworzenie tabeli `orders`
CREATE TABLE IF NOT EXISTS `orders` (
    `ORD_NUM` DECIMAL(6,0) PRIMARY KEY NOT NULL,
    `ORD_AMOUNT` DECIMAL(12,2) NOT NULL,
    `ADVANCE_AMOUNT` DECIMAL(12,2) NOT NULL,
    `ORD_DATE` DATE NOT NULL,
    `CUST_CODE` VARCHAR(6) NOT NULL,
    `AGENT_CODE` VARCHAR(6) NOT NULL,
    `ORD_DESCRIPTION` VARCHAR(60) NOT NULL
);

-- Wstawianie danych do tabeli `orders`
INSERT INTO `orders` (`ORD_NUM`, `ORD_AMOUNT`, `ADVANCE_AMOUNT`, `ORD_DATE`, `CUST_CODE`, `AGENT_CODE`, `ORD_DESCRIPTION`) VALUES
('200100', '1000.00', '600.00', '2008-01-08', 'C00015', 'A003', 'SOD'),
('200110', '3000.00', '500.00', '2008-04-15', 'C00019', 'A010', 'SOD'),
('200107', '4500.00', '900.00', '2008-08-30', 'C00007', 'A010', 'SOD'),
('200112', '2000.00', '400.00', '2008-05-30', 'C00016', 'A007', 'SOD'),
('200113', '4000.00', '600.00', '2008-06-10', 'C00022', 'A002', 'SOD'),
('200102', '2000.00', '300.00', '2008-05-25', 'C00012', 'A012', 'SOD'),
('200114', '3500.00', '2000.00', '2008-08-15', 'C00002', 'A008', 'SOD'),
('200122', '2500.00', '400.00', '2008-09-16', 'C00003', 'A004', 'SOD'),
('200118', '500.00', '100.00', '2008-07-20', 'C00023', 'A006', 'SOD'),
('200119', '4000.00', '700.00', '2008-09-16', 'C00007', 'A010', 'SOD'),
('200121', '1500.00', '600.00', '2008-09-23', 'C00008', 'A004', 'SOD'),
('200130', '2500.00', '400.00', '2008-07-30', 'C00025', 'A011', 'SOD'),
('200134', '4200.00', '1800.00', '2008-09-25', 'C00004', 'A005', 'SOD'),
('200115', '2000.00', '1200.00', '2008-02-08', 'C00013', 'A013', 'SOD'),
('200108', '4000.00', '600.00', '2008-02-15', 'C00008', 'A004', 'SOD'),
('200103', '1500.00', '700.00', '2008-05-15', 'C00021', 'A005', 'SOD'),
('200105', '2500.00', '500.00', '2008-07-18', 'C00025', 'A011', 'SOD'),
('200109', '3500.00', '800.00', '2008-07-30', 'C00011', 'A010', 'SOD'),
('200101', '3000.00', '1000.00', '2008-07-15', 'C00001', 'A008', 'SOD'),
('200111', '1000.00', '300.00', '2008-07-10', 'C00020', 'A008', 'SOD'),
('200104', '1500.00', '500.00', '2008-03-13', 'C00006', 'A004', 'SOD'),
('200106', '2500.00', '700.00', '2008-04-20', 'C00005', 'A002', 'SOD'),
('200125', '2000.00', '600.00', '2008-10-10', 'C00018', 'A005', 'SOD'),
('200117', '800.00', '200.00', '2008-10-20', 'C00014', 'A001', 'SOD'),
('200123', '500.00', '100.00', '2008-09-16', 'C00022', 'A002', 'SOD'),
('200120', '500.00', '100.00', '2008-07-20', 'C00009', 'A002', 'SOD'),
('200116', '500.00', '100.00', '2008-07-13', 'C00010', 'A009', 'SOD'),
('200124', '500.00', '100.00', '2008-06-20', 'C00017', 'A007', 'SOD'),
('200126', '500.00', '100.00', '2008-06-24', 'C00022', 'A002', 'SOD'),
('200129', '2500.00', '500.00', '2008-07-20', 'C00024', 'A006', 'SOD'),
('200127', '2500.00', '400.00', '2008-07-20', 'C00015', 'A003', 'SOD'),
('200128', '3500.00', '1500.00', '2008-07-20', 'C00009', 'A002', 'SOD'),
('200135', '2000.00', '800.00', '2008-09-16', 'C00007', 'A010', 'SOD'),
('200131', '900.00', '150.00', '2008-08-26', 'C00012', 'A012', 'SOD'),
('200133', '1200.00', '400.00', '2008-06-29', 'C00009', 'A002', 'SOD'),
('200132', '4000.00', '2000.00', '2008-08-15', 'C00013', 'A012', 'SOD');


-- Wprowadzenie
-- a. Kwerenda, która zwróci wszystkich klientów z zamówieniami zrealizowanymi w dniu 2008-01-08
SELECT DISTINCT
    c.CUST_NAME
FROM
    customer c
JOIN
    orders o ON c.CUST_CODE = o.CUST_CODE
WHERE
    o.ORD_DATE = '2008-01-08';

-- b. Kwerenda, która zwróci listę agentów oraz klientów do nich przypisanych, wraz z ich obszarem działalności.
SELECT
    a.AGENT_NAME,
    c.CUST_NAME,
    a.WORKING_AREA AS AgentWorkingArea,
    c.WORKING_AREA AS CustomerWorkingArea
FROM
    agents a
LEFT JOIN
    customer c ON a.AGENT_CODE = c.AGENT_CODE
ORDER BY
    a.AGENT_NAME, c.CUST_NAME;


-- INNER JOIN
-- a. Wyszukaj listę klientów, którzy podjęli współpracę z agentami, których prowizja jest powyżej 12%; kolumna z imieniem agenta powinna mieć nazwę „Salesman”
SELECT
    c.CUST_NAME,
    a.AGENT_NAME AS Salesman
FROM
    customer c
INNER JOIN
    agents a ON c.AGENT_CODE = a.AGENT_CODE
WHERE
    a.COMMISSION > 0.12;

-- b. Wyszukaj szczegóły dot. Zamówień: nr zamówienia, datę, kwotę, klienta (nazwa kolumny powinna być „Customer Name”) oraz agenta (w tym wypadku nazwa kolumny to „Salesman”), który pracuje dla tego klienta oraz jego prowizję od zamówienia
SELECT
    o.ORD_NUM AS 'Numer Zamówienia',
    o.ORD_DATE AS 'Data Zamówienia',
    o.ORD_AMOUNT AS 'Kwota Zamówienia',
    c.CUST_NAME AS 'Customer Name',
    a.AGENT_NAME AS Salesman,
    a.COMMISSION AS 'Prowizja Agenta'
FROM
    orders o
INNER JOIN
    customer c ON o.CUST_CODE = c.CUST_CODE
INNER JOIN
    agents a ON o.AGENT_CODE = a.AGENT_CODE;


-- LEFT JOIN
-- a. Wyszukaj listę - posortowaną rosnąco wg kodu klienta (jego id) – klientów wraz z kodami i imionami przypisanych do nich agentów (nazwij kolumnę zawierającą imiona agentów jako „Salesman”), wyszukaj również ich obszar działalności
SELECT
    c.CUST_CODE,
    c.CUST_NAME,
    a.AGENT_CODE,
    a.AGENT_NAME AS Salesman,
    a.WORKING_AREA AS AgentWorkingArea,
    c.WORKING_AREA AS CustomerWorkingArea
FROM
    customer c
LEFT JOIN
    agents a ON c.AGENT_CODE = a.AGENT_CODE
ORDER BY
    c.CUST_CODE ASC;


-- RIGHT JOIN
-- a. Wyszukaj listę agentów pracujących dla jednego bądź więcej klientów lub takich, którzy jeszcze nie podjęli współpracy z żadnym klientem, posortuj listę rosnąco wg kolumny kodu agenta; nazwij kolumnę zawierającą nazwy agentów jako „Salesman”, wyszukaj również ich obszar działalności
SELECT
    a.AGENT_CODE,
    a.AGENT_NAME AS Salesman,
    a.WORKING_AREA
FROM
    customer c
RIGHT JOIN
    agents a ON c.AGENT_CODE = a.AGENT_CODE
ORDER BY
    a.AGENT_CODE ASC;


-- CROSS JOIN
-- a. Wyszukaj iloczyn kartezjański agentów oraz klientów, w taki sposób, że każdy agent będzie widoczny dla wszystkich klientów i vice versa.
SELECT
    a.AGENT_NAME,
    c.CUST_NAME
FROM
    agents a
CROSS JOIN
    customer c;

-- b. Wyszukaj iloczyn kartezjański agentów oraz klientów, w taki sposób, że każdy agent będzie widoczny dla wszystkich klientów i vice versa, ale tylko jeżeli agent jest z tego samego obszaru co klient.
SELECT
    a.AGENT_NAME,
    c.CUST_NAME,
    a.WORKING_AREA AS AgentWorkingArea,
    c.WORKING_AREA AS CustomerWorkingArea
FROM
    agents a
CROSS JOIN
    customer c
WHERE
    a.WORKING_AREA = c.WORKING_AREA;

-- c. Wyszukaj iloczyn kartezjański agentów oraz klientów, w taki sposób, że każdy agent będzie widoczny dla wszystkich klientów i vice versa, ale tylko jeżeli agent jest z innego obszaru niż klient, a klient posiada swoją własną ocenę (‘grade’)
SELECT
    a.AGENT_NAME,
    c.CUST_NAME,
    c.GRADE AS CustomerGrade,
    a.WORKING_AREA AS AgentWorkingArea,
    c.WORKING_AREA AS CustomerWorkingArea
FROM
    agents a
CROSS JOIN
    customer c
WHERE
    a.WORKING_AREA <> c.WORKING_AREA AND c.GRADE IS NOT NULL;


-- UNION
-- a. Wyszukaj wszystkich agentów (ich kod – nazwij kolumne „ID” - oraz imię agenta); przypisz im wartość ‘Salesman’ w kolumnie o nazwie „Rodzaj”, oraz klientów – ich ID i nazwa (wartość ‘Customer’ w kolumnie „Rodzaj”) zlokalizowanych w Londynie
SELECT
    AGENT_CODE AS ID,
    AGENT_NAME AS Nazwa,
    'Salesman' AS Rodzaj
FROM
    agents
UNION ALL
SELECT
    CUST_CODE AS ID,
    CUST_NAME AS Nazwa,
    'Customer' AS Rodzaj
FROM
    customer
WHERE
    CUST_CITY = 'London';

-- b. Napisz kwerendę, która zwróci raport pokazujący, który agent przyjął największe i najmniejsze zamówienia na każdy dzień
SELECT
    o.ORD_DATE,
    a.AGENT_NAME,
    o.ORD_AMOUNT,
    'Największe' AS TypZamowienia
FROM
    orders o
JOIN
    agents a ON o.AGENT_CODE = a.AGENT_CODE
WHERE
    (o.ORD_DATE, o.ORD_AMOUNT) IN (
        SELECT ORD_DATE, MAX(ORD_AMOUNT)
        FROM orders
        GROUP BY ORD_DATE
    )
UNION ALL
SELECT
    o.ORD_DATE,
    a.AGENT_NAME,
    o.ORD_AMOUNT,
    'Najmniejsze' AS TypZamowienia
FROM
    orders o
JOIN
    agents a ON o.AGENT_CODE = a.AGENT_CODE
WHERE
    (o.ORD_DATE, o.ORD_AMOUNT) IN (
        SELECT ORD_DATE, MIN(ORD_AMOUNT)
        FROM orders
        GROUP BY ORD_DATE
    )
ORDER BY
    ORD_DATE, TypZamowienia DESC;


-- WITH
-- a. Wyszukaj agenta w Londynie z prowizją powyżej 14% - nazwij widok „londonstaff”
WITH londonstaff AS (
    SELECT
        AGENT_CODE,
        AGENT_NAME,
        WORKING_AREA,
        COMMISSION
    FROM
        agents
    WHERE
        WORKING_AREA = 'London' AND COMMISSION > 0.14
)
SELECT * FROM londonstaff;

-- b. Utwórz widok „gradecount”, aby uzyskać liczbę klientów dla każdej oceny (‘grade’)
CREATE VIEW gradecount AS
SELECT
    GRADE,
    COUNT(CUST_CODE) AS NumberOfCustomers
FROM
    customer
GROUP BY
    GRADE;

-- Zapytanie do wyświetlenia widoku gradecount
SELECT * FROM gradecount;

-- c. Utwórz widok (o nazwie „total_per_dzien”) do śledzenia liczby klientów, średniej kwoty zamówień oraz ogólnej sumy zamówień na każdy dzień
CREATE VIEW total_per_dzien AS
SELECT
    ORD_DATE,
    COUNT(DISTINCT CUST_CODE) AS NumberOfCustomers,
    AVG(ORD_AMOUNT) AS AverageOrderAmount,
    SUM(ORD_AMOUNT) AS TotalOrderAmount
FROM
    orders
GROUP BY
    ORD_DATE;

-- Zapytanie do wyświetlenia widoku total_per_dzien
SELECT * FROM total_per_dzien;
